[color]
	diff = auto
	status = auto
	branch = auto
	interactive = auto
	ui = true
[alias]
	st = status
	co = checkout
	ci = commit
	br = branch
	fe = fetch
	sb = show-branch
	cp = cherry-pick
	sg = diff --staged
	amend-branch-based-on = "!f() { git rebase -i $(git merge-base HEAD "$1"); }; f"
	show-merge = "!f() { git diff "$1^" "$1"; }; f"
	subdo = submodule foreach git
	wdiff = diff --word-diff=color
	lg = log --graph \
		--pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' \
		--abbrev-commit --date=relative
	tomerge = log --stat --reverse --topo-order ..@{upstream}
	topush  = log --stat --reverse --topo-order   @{upstream}..
	root = rev-parse --show-toplevel
	x-submodule-reset = submodule foreach 'git reset --hard $sha1'
	x-submodule-attach = "submodule foreach \
		'branch=$(git config -f $toplevel/.gitmodules submodule.$name.branch); \
		hash=$(git rev-parse HEAD); \
		test -z $branch && branch=master; \
		git checkout -B $branch $hash'"
	x-submodule-behind = !git subdo status -sb | grep --color=auto -B 1 behind
[core]
	excludesfile = ~/.ignore-patterns
[merge]
	defaultToUpstream = 1
	conflictStyle = diff3
[rerere]
    enabled = 1
[branch]
	autosetuprebase = remote
[push]
# Push to whatever is set up as upstream, even with different branch names.
	default = upstream
[fetch]
	prune = 1
[svn]
	rmdir = 1
[diff]
	mnemonicprefix = true

[url "http://code.qt.io/git/qt/"]
	insteadOf = qt:
[url "http://code.qt.io/git/qt-labs/"]
	insteadOf = qtl:

[url "git://anongit.kde.org/"]
	insteadOf = kde:
[url "git@git.kde.org:"]
	pushInsteadOf = kde:

[url "https://github.com/"]
	insteadOf = gh:
[url "git@github.com:"]
	pushInsteadOf = gh:

[url "git@bitbucket.org:"]
	insteadOf = bb:
[url "git@gitlab.com:"]
	insteadOf = gl:
[filter "lfs"]
	required = true
	smudge = git-lfs smudge %f
	clean = git-lfs clean %f

# vim: filetype=gitconfig:noet
